version: "3"

services:
  ubuntu:
    image: luke/ubuntu
    build:
      context: ./ubuntu
      dockerfile: Dockerfile-16.04
    container_name: ubuntu
  nginx:
    image: luke/nginx-ubuntu
    build:
      context: ./nginx
      dockerfile: Dockerfile-ubuntu
    container_name: web_nginx_ubuntu
    depends_on:
      - ubuntu
    volumes:
      - ./src:/src
      - ./logs/nginx:/var/log/nginx
      - ./config/nginx/ubuntu/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ubuntu/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - php-fpm
    networks:
      vpcbr:
        ipv4_address: 192.168.30.2
  php-fpm:
    image: luke/php-fpm-ubuntu
    build:
      context: ./php
      dockerfile: Dockerfile-ubuntu
    container_name: web_php_ubuntu
    depends_on:
      - ubuntu
    volumes:
      - ./src:/src
      - ./config/php/php.ini:/etc/php/7.2/fpm/php.ini
      - ./config/php/www.conf:/etc/php/7.2/fpm/pool.d/www.conf
    ports:
      - "9000:9000"
    restart: always
    links:
      - mysql-db
      - redis-db
      - memcached-db
      - mongo-db
    networks:
      vpcbr:
        ipv4_address: 192.168.30.3
  mysql-db:
    image: luke/mysql-ubuntu
    build:
      context: ./mysql
      dockerfile: Dockerfile-ubuntu
    container_name: web_mysql_ubuntu
    depends_on:
      - ubuntu
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./config/mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - ./config/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./logs/mysql:/var/log/mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD=laravel@2018
      - MYSQL_USER=phper
      - MYSQL_PASSWORD=2018@laravel
    networks:
      vpcbr:
        ipv4_address: 192.168.30.4
  redis-db:
    image: luke/redis-ubuntu
    build:
      context: ./redis
      dockerfile: Dockerfile-ubuntu
    container_name: web_redis_ubuntu
    depends_on:
      - ubuntu
    volumes:
      - ./data/redis:/data
      - ./config/redis/redis.conf:/etc/redis/redis.conf
      - ./logs/redis:/var/log/redis
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    ports:
      - "6379:6379"
    restart: always
    networks:
      vpcbr:
        ipv4_address: 192.168.30.5
  memcached-db:
    image: luke/memcached
    build:
      context: ./memcached
      dockerfile: Dockerfile-1.5
    container_name: web_memcached_ubuntu
    command: [ "memcached", "-m", "64" ]
    ports:
        - "11211:11211"
    restart: always
    networks:
      vpcbr:
        ipv4_address: 192.168.30.6
  mongo-db:
    image: luke/mongo-origin
    build:
      context: ./mongo
      dockerfile: Dockerfile-3.6-origin
    container_name: web_mongo_ubuntu
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/mongo:/data/db
    ports:
        - 27017:27017
    command: ["mongod", "--smallfiles", "--logpath=/dev/null"]
    restart: always
    networks:
      vpcbr:
        ipv4_address: 192.168.30.7

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.30.0/24